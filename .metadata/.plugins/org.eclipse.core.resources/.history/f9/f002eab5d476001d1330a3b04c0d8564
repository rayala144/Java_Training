package com.fileexplorer.network.copy2;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.List;
import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import com.fileexplorer.main.SearchEngineMain;

public class ServerClass {
	int pt;
	ServerSocket ss = null;
	Socket socket = null;
	ExecutorService es = null;
	int clientcount = 0;

	public static void main(String[] args) throws IOException {
		ServerClass sObject = new ServerClass(9000);
		sObject.startServer();

	}

	ServerClass(int pt) {
		this.pt = pt;
		es = Executors.newFixedThreadPool(5);

	}

	public void startServer() throws IOException {

		ss = new ServerSocket(9000);
		System.out.println("S_Class Started....");
		System.out.println("To break the connection send BYE....");
		while (true) {

			socket = ss.accept();
			clientcount++;
			ServerThread st = new ServerThread(socket, clientcount, this);
			es.execute(st);
		}

	}

	private static class ServerThread implements Runnable {

		ServerClass serverClass = null;
		Socket client = null;
		BufferedReader in;
		PrintStream out;
		Scanner sc = new Scanner(System.in);
		int id;
		String input;
		private String outputString = "";

		ServerThread(Socket client, int count, ServerClass serverClass) throws IOException {

			this.client = client;
			this.serverClass = serverClass;
			this.id = count;
			System.out.println("Connection established with client " + id);

			in = new BufferedReader(new InputStreamReader(client.getInputStream()));
			out = new PrintStream(client.getOutputStream());

		}

		@Override
		public void run() {
			int x = 1;
			try {
				while (true) {
					input = in.readLine();
					System.out.print("Client(" + id + ") : " + input + "\n");

					if (input.equalsIgnoreCase("bye")) {
						out.println("BYE");
						x = 0;
						System.out.println("Connection Ended....");
						break;
					} else if ((input.length() >= 6) && ((input.charAt(input.length() - 4) == '.')
							|| (input.charAt(input.length() - 5) == '.'))) {

						System.out.println("Client requested for searching file " + input);
						SearchEngineMain se = new SearchEngineMain();
						List<String> filepaths = se.mainSearch(input);
						outputString = "Location: " + filepaths;
						out.println(outputString);
						out.flush();
						// outputString = "";

					}
					String output = sc.nextLine();
					out.println(output);
					out.flush();
					// System.out.print("Server: ");

				}

				in.close();
				client.close();
				out.close();
				if (x == 0) {
					System.out.println("*****Closing*****");
					System.exit(0);
				}
			} catch (Exception e) {
				System.out.println(e);
			}
		}
	}
}
